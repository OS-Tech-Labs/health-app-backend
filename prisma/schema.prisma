generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Chat {
  chat_id    String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  officer_id String?  @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  patient_id String?  @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  disabled   Boolean?
  Patient    Patient? @relation(fields: [patient_id], references: [patient_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Chat.patient_id")
}

model Doctor {
  doctor_id       String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  officer_id      String?   @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  first_name      String?   @db.VarChar(20)
  last_name       String?   @db.VarChar(20)
  email_address   String?   @db.VarChar(50)
  contact__number String?   @map("contact _number") @db.VarChar(20)
  specialization  String?   @db.VarChar(20)
  bookings        bookings?
}

model Medical_Officer {
  officer_id String  @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  user_id    String? @default(dbgenerated("uuid_generate_v4()")) @db.Uuid

  @@map("Medical Officer")
}

model Medicine {
  medicine_id   String          @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  medicine_name String?         @db.VarChar(20)
  pharmacy_drug pharmacy_drug[] @ignore
}

model Patient {
  patient_id     String       @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  user_id        String?      @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  first_name     String?      @db.VarChar(20)
  last_name      String?      @db.VarChar(20)
  email_address  String?      @db.VarChar(20)
  contact_number String?      @db.VarChar(20)
  age            Int?
  weight         Int?
  allergies      String?      @db.Xml
  description    String?      @db.VarChar(50)
  Chat           Chat[]
  Treatments     Treatments[]
  bookings       bookings[]
}

model Pharmacist {
  pharmacist_id  String          @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  officer_id     String?         @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  first_name     String?         @db.VarChar(20)
  last_name      String?         @db.VarChar(20)
  email_address  String?         @db.VarChar(20)
  contact_number String?         @db.VarChar(20)
  pharmacy_drug  pharmacy_drug[] @ignore
}

model Treatments {
  treatment_id String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  patient_id   String?  @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  treatment    String?  @db.Xml
  Patient      Patient? @relation(fields: [patient_id], references: [patient_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Treatments.patient_id")
}

model User {
  user_id       String  @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  hash          String? @db.VarChar(50)
  user_type     String? @db.VarChar(20)
  username      String? @db.VarChar(30)
  email_address String? @db.VarChar(30)
}

model bookings {
  booking_id  String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  patient_id  String?   @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  doctor_id   String?   @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  description String?   @db.VarChar(50)
  date        DateTime? @db.Timestamp(6)
  Doctor      Doctor    @relation(fields: [booking_id], references: [doctor_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_bookings.booking_id")
  Patient     Patient?  @relation(fields: [patient_id], references: [patient_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_bookings.patient_id")
}

model doctor_timetable {
  doctor_id   String  @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  weekly_plan String? @db.Xml

  @@map("doctor-timetable")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model pharmacy_drug {
  pharmacist_id String?     @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  medicine_id   String?     @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  Medicine      Medicine?   @relation(fields: [medicine_id], references: [medicine_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_pharmacy-drug.medicine_id")
  Pharmacist    Pharmacist? @relation(fields: [pharmacist_id], references: [pharmacist_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_pharmacy-drug.pharmacist_id")

  @@map("pharmacy-drug")
  @@ignore
}
